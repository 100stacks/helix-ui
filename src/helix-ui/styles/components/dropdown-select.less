@import (reference) 'vars';

// ========== CONFIG ==========
// Shared state styles (common to <select> and <hx-select>)
@Select: {
  @Pristine: {
    background-color: @gray-0;
    border: 1px solid @gray-500;
    color: @gray-900;
  }

  @Invalid: {
    background-color: @gray-0;
    border: 2px solid @red-900;
    color: @gray-900;
  }

  @Disabled: {
    background-color: @gray-100;
    border: 1px solid @gray-500;
    color: @gray-700;
  }
}

// ========== BASE ELEMENTS ==========
hx-select { // [001]
  display: block;
  pointer-events: none;
}

hx-select-control { // [001]
  color: @gray-900;
  font-size: 1rem;
  height: 2rem;
}

// ========== RESETS ==========
hx-select-control {
  // [001] hx-select-control > *
  > * {
    margin: 0;
    padding: 0;
  }

  // [002] hx-select-control > select
  > select {
    #Reset.select();
  }
}

/* ========== LAYOUT ========== */
hx-select-control { // [001]
  -ms-grid-columns: 1fr;
  -ms-grid-rows: 1fr;
  display: -ms-grid;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;

  // [001] hx-select-control > *
  > * {
    -ms-grid-column: 1;
    -ms-grid-row: 1;
    display: none; // blacklist all child elements, by default
    grid-column-start: 1;
    grid-row-start: 1;
  }

  // [002] hx-select-control > hx-select
  > hx-select {
    // Hidden by default, because we can style native <select> in IE.
  }

  // [002] hx-select-control > select
  > select {
    display: block; // whitelisted
    width: 100%; // prevent overflow for lengthy option text
  }
}

/* ========== PRISTINE ========== */
hx-select-control {
  @pristine: @Select[@Pristine];

  // [001] hx-select-control > *
  > * {
    border-radius: 2px;
    border: @pristine[border];
  }

  // [002] hx-select-control > select
  > select {
    background-color: @pristine[background-color];
    padding-left: 0.75rem;

    // Adjust native trigger for MS browsers (mainly IE)
    // Edge will obscure it with <hx-select>.
    #MS.set.expand({
      padding: 0 0.75rem;
    });

    // [012] hx-select-control > select:focus
    &:focus {
      #Moz.reset.focusring(@pristine[color]);
      box-shadow: @focus-glow;
      outline: none;
    }
  }
}

/* ========== INVALID ========== */
hx-select-control {
  @invalid: @Select[@Invalid];

  &[hx-changed],
  &[hx-touched] {
    // [022] hx-select-control[hx-changed] > select:invalid
    // [022] hx-select-control[hx-touched] > select:invalid
    > select:invalid {
      background-color: @invalid[background-color];
      border: @invalid[border];
      color: @invalid[color];

      // [032] hx-select-control[hx-changed] > select:invalid:focus
      // [032] hx-select-control[hx-touched] > select:invalid:focus
      &:focus {
        #Moz.reset.focusring(@invalid[color]);
        box-shadow: @focus-glow-invalid;
      }

      // [023] hx-select-control[hx-changed] > select:invalid ~ hx-select
      // [023] hx-select-control[hx-touched] > select:invalid ~ hx-select
      ~ hx-select {
        border: @invalid[border];
        color: @invalid[color];
      }
    }
  }

  .hxInvalid &,
  &.hxInvalid {
    // [022] .hxInvalid hx-select-control > select:enabled
    // [022] hx-select-control.hxInvalid > select:enabled
    > select:enabled {
      background-color: @invalid[background-color];
      border: @invalid[border];
      color: @invalid[color];

      // [032] .hxInvalid hx-select-control > select:enabled:focus
      // [032] hx-select-control.hxInvalid > select:enabled:focus
      &:focus {
        #Moz.reset.focusring(@invalid[color]);
        box-shadow: @focus-glow-invalid;
      }

      // [023] .hxInvalid hx-select-control > select:enabled ~ hx-select
      // [023] hx-select-control.hxInvalid > select:enabled ~ hx-select
      ~ hx-select {
        border: @invalid[border];
        color: @invalid[color];
      }
    }
  }
}

/* ========== DISABLED ========== */
// [012] hx-select-control > select:disabled
hx-select-control > select:disabled {
  @disabled: @Select[@Disabled];

  background-color: @disabled[background-color];
  border: @disabled[border];
  color: @disabled[color];
  cursor: not-allowed;

  // [013] hx-select-control > select:disabled ~ hx-select
  ~ hx-select {
    --hxSelect__trigger-background: var(--hxSelect__trigger-background--disabled);
    border: @disabled[border];
    color: @disabled[color];
  }

  // [022] hx-select-control > select:disabled:focus
  &:focus {
    #Moz.reset.focusring(@disabled[color]);
    border: @disabled[border];
    box-shadow: @focus-glow-disabled;

    // [023] hx-select-control > select:disabled:focus ~ hx-select
    ~ hx-select {
      border: @disabled[border];
    }
  }
}

/* ========== OVERRIDES ========== */

// ----- IE Corrections -----
// IE incorrectly matches :invalid when :disabled, so we need to
// ensure that :disabled styles are applied, instead of :invalid
hx-select-control > select:disabled:invalid { // [022]
  &:extend(hx-select-control > select:disabled all);
}

// ----- Modern Browsers -----
@supports (--modern: true) {
  hx-select-control {
    // [002] hx-select-control > select
    > select {
      border: 0; // style <hx-select> borders, instead
    }

    // [002] hx-select-control > hx-select
    > hx-select {
      // Show in modern browsers, so we can make use of
      // CSS custom properties to customize appearance.
      display: block;
    }
  }
}
