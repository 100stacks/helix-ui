@import (reference) 'components/option-tile';

.option-tile-demo {
  label.hxOption > input {
    /* Default (focus, hover) */
    &.pseudo-focus + hx-tile {
      &:extend(label.hxOption > input:focus + hx-tile all);
    }
    & + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input + hx-tile:hover all);
    }

    /* Subdued (focus, hover) */
    &.pseudo-focus + hx-tile.hxSubdued {
      &:extend(label.hxOption > input:focus + hx-tile.hxSubdued all);
    }
    & + hx-tile.hxSubdued.pseudo-hover {
      &:extend(label.hxOption > input + hx-tile:hover.hxSubdued all);
    }

    /* Checked (focus, hover) */
    &:checked.pseudo-focus + hx-tile {
      &:extend(label.hxOption > input:checked:focus + hx-tile all);
    }
    &:checked + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input:checked + hx-tile:hover all);
    }

    /* Invalid (focus, hover) */
    &[invalid].pseudo-focus + hx-tile {
      &:extend(label.hxOption > input[invalid]:focus + hx-tile all);
    }
    &[invalid] + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input[invalid] + hx-tile:hover all);
    }

    /* Invalid + Checked (focus, hover) */
    &[invalid]:checked.pseudo-focus + hx-tile {
      &:extend(label.hxOption > input[invalid]:checked:focus + hx-tile all);
    }
    &[invalid]:checked + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input[invalid]:checked + hx-tile:hover all);
    }

    /* Disabled */
    &[disabled] + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input[disabled] + hx-tile:hover all);
    }
    &[disabled][invalid] + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input[disabled][invalid] + hx-tile:hover all);
    }
    &[disabled]:checked + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input[disabled]:checked + hx-tile:hover all);
    }
    &[disabled][invalid]:checked + hx-tile.pseudo-hover {
      &:extend(label.hxOption > input[disabled][invalid]:checked + hx-tile:hover all);
    }
  }
}
